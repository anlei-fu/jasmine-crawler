<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jasmine.crawler.cron.mapper.TaskSnapShot10MinuteMapper">

    <!--calculate_average: customer function to calculate average -->
    <update id="snapShot10Minute">
        insert into task_snap_shot_10_minute(
        down_system_site_id,
        crawler_id,
        cookie_id,
        success_count,
        failed_count,
        blocked_count,
        success_url_count,
        failed_url_count,
        new_url_count,
        average_speed_of_all,
        average_speed_of_success,
        max_speed_of_success,
        median_speed_of_success,
        url_sync_count,
        data_sync_count,
        create_time
        )
        select
        t.down_system_site_id,
        t.crawler_id,
        t.cookie_id,

        -- success count
        sum(case when t.task_result =1 then 1 else 0 end) success_count,

        -- failed count
        sum(case when t.task_result =2 then 1 else 0 end) failed_count,

        -- block count
        sum(case when t.task_result =3 then 1 else 0 end) block_count,

        -- success url count
        sum(t.url_success_count) success_url_count,

        -- failed url count
        sum(t.url_failed_count) failed_url_count,

        -- new url count
        sum(t.url_new_count) new_url_count,

        -- average speed of all
        calculate_average(sum(case when t.task_result =1 then t.average_speed_of_all else 0 end),sum(case when t.task_result =1 then 1 else 0 end))
        average_speed_of_all,

        -- average speed of success
        calculate_average(sum(case when t.task_result =1 then t.average_speed_of_success else 0 end),sum(case when t.task_result =1 then 1 else 0 end))
        average_speed_of_success,

        -- max speed of success
        calculate_average(sum(case when t.task_result =1 then t.max_speed_of_success else 0 end),sum(case when t.task_result =1 then 1 else 0 end))
        max_speed_of_success,

        -- median speed of success
        calculate_average(sum(case when t.task_result =1 then t.median_speed_of_success else 0 end),sum(case when t.task_result =1 then 1 else 0 end))
        median_speed_of_success,

        -- url sync count
        sum(case when t.url_sync_status =1 then 1 else 0 end) url_sync_count,

        --  data sync count
        sum(case when t.data_sync_status =1 then 1 else 0 end) data_sync_count,

        -- create time
        #{time} create_time

        from crawl_task t
        where
        t.task_status = 4
        and t.task_finish_time >= #{time}
        and t.task_finish_time &lt; date_add(#{time},interval 10 minute)
        group by
        t.down_system_site_id,
        t.crawler_id,
        t.cookie_id
    </update>
    <delete id="delete">
        delete from task_snap_shot_10_minute
        where create_time = #{time}
    </delete>
</mapper>
