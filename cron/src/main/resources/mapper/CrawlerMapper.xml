<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Jasmine code generator, a tool to build web crud application,with spring-
boot, mybatis, mysql,swagger,spring-security.
Generated at 2020-7-25 2:58:14 PM
All rights reserved by fuanlei(email:767550758@qq.com) since 2019 -->
<mapper namespace="com.jasmine.crawler.cron.mapper.CrawlerMapper">
    <select id="getById" resultType="com.jasmine.crawler.common.pojo.entity.Crawler">
        select * from crawler where id = #{id}
    </select>
    <select id="getCrawlersNeedHeartbeat" resultType="com.jasmine.crawler.common.pojo.entity.Crawler">
        select * from crawler c
        where
        c.enable_status = 1
        and
        -- max heartbeat interval 10 min
        date_add(c.heartbeat_last_time,interval least(c.heartbeat_lost_count,10) minute) &lt; current_timestamp
    </select>
    <update id="heartbeatSuccess">
        update crawler
        set heartbeat_status = 1,
        heartbeat_lost_count = 0,
        heartbeat_last_time = current_timestamp
        where id = #{id}
    </update>
    <update id="heartbeatFailed">
        update crawler
        set heartbeat_status = 0,
        current_concurrency = 0,
        heartbeat_lost_count = heartbeat_lost_count + 1,
        heartbeat_last_time = current_timestamp
        where id = #{id}
    </update>
    <update id="updateConcurrencyById">
        update crawler
        set current_concurrency = current_concurrency + #{concurrencyToIncrease}
        where id = #{id}
    </update>
    <select id="getCrawlerForSite" resultType="com.jasmine.crawler.common.pojo.entity.Crawler">
        select
        *
        from crawler c
        where
        c.enable_status = 1
        and c.heartbeat_status =1
        and
        (c.max_concurrency-c.current_concurrency) > (select ip_minute_speed_limit from site s where s.id = #{siteId})
        <if test="withIp">
            and not exists (
            select 1 from site_ip_block_map sibm
            where
            sibm.ip = c.ip
            and sibm.site_id = #{siteId}
            and sibm.block_timeout_time > current_timestamp
            )
            and not exists (
            select 1 from site_ip_delay_map sidm
            where
            sidm.ip =c.ip
            and sidm.site_id = #{siteId}
            and sidm.delay_timeout_time > current_timestamp
            )
        </if>
        order by c.current_concurrency/c.max_concurrency asc
    </select>
</mapper>
