<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Jasmine code generator, a tool to build web crud application,with spring-
boot, mybatis, mysql,swagger,spring-security.
Generated at 2020-7-25 2:58:14 PM
All rights reserved by fuanlei(email:767550758@qq.com) since 2019 -->
<mapper namespace="com.jasmine.crawler.cron.mapper.CrawlTaskMapper">
    <insert id="add">
        insert into crawl_task
        (
         site_id,
         down_system_site_id
        )values(
          #{siteId},
          #{downSystemSiteId}
        )
    </insert>

    <delete id="deleteById">
         delete from crawl_task where id = #{id}
    </delete>

    <select id="getById" resultType="com.jasmine.crawler.common.pojo.entity.CrawlTask">
        select * from crawl_task where id = #{id}
    </select>

    <select id="getTaskToBind" resultType="com.jasmine.crawler.common.pojo.entity.CrawlTask">
        select
        *
        from crawl_task ct
        join down_system_site dss on ct.down_system_site_id = dss.id
        join down_system ds on dss.down_system_id =ds.id
        join site s on dss.site_id = s.id
        where
        ct.bind_last_status=1
        and s.enable_status =1
        and ds.enable_status =1
        and dss.enable_status =1
        and ct.bind_count >= #{minBindCount}
        and ct.bind_count &lt; #{maxBindCount}
        and dss.task_current_running_count &lt; dss.task_max_running_count
        and ds.task_current_running_count &lt; ds.task_max_running_count
        order by
        0.3 * ds.priority / 10 +
        0.2 * dss.priority / 10 +
        0.15 * (ds.task_max_running_count -ds.task_current_running_count)/ds.task_max_running_count+
        0.1 * (dss.task_max_running_count-dss.task_current_running_count)/dss.task_max_running_count+
        0.15 * (ds.url_total_count-ds.url_finished_count)/ds.url_total_count+
        0.1 * (dss.url_total_count- dss.url_finished_count)/dss.url_total_count,
        ct.create_time asc
  </select>
    <select id="getTaskToBindLowestLevel" resultType="com.jasmine.crawler.common.pojo.entity.CrawlTask">
        select
        *
        from crawl_task ct
        join down_system_site dss on ct.down_system_site_id = dss.id
        join down_system ds on dss.down_system_id =ds.id
        join site s on dss.site_id = s.id
        where
        ct.last_bind_status=1
        and s.enable_status =1
        and ds.enable_status =1
        and dss.enable_status =1
        and ct.bind_count >= 25
        and dss.task_current_running_count &lt; dss.task_max_running_count
        and ds.task_current_running_count &lt; ds.task_max_running_count
        order by
        0.3 * ds.priority / 10 +
        0.2 * dss.priority / 10 +
        0.15 * (ds.task_max_running_count -ds.task_current_running_count)/ds.task_max_running_count+
        0.1 * (dss.task_max_running_count-dss.task_current_running_count)/dss.task_max_running_count+
        0.15 * (ds.url_total_count-ds.url_finished_count)/ds.url_total_count+
        0.1 * (dss.url_total_count- dss.url_finished_count)/dss.url_total_count,
        ct.create_time asc
    </select>

    <update id="bindSuccess">
        update crawl_task
        set
        bind_last_status = 1,
        bind_last_time = current_timestamp,
        bind_last_msg = 'success',
        dispatch_status = 1,
        bind_count = bind_count + 1
        where
        id = #{id}
    </update>
    <update id="bindFailed">
        update crawl_task
        set
        bind_last_status = #{lastBindStatus},
        bind_last_time = current_timestamp,
        bind_last_msg = #{lastBindMsg},
        bind_count = bind_count + 1
        where
        id = #{id}
    </update>
    <select id="getTaskConfigsToDispatch" resultType="com.jasmine.crawler.cron.pojo.config.CrawlTaskConfig">
        select
        dss.crawler_auto_download_page as auto_download_page,
        dss.crawler_crawl_type as crawl_type ,
        dss.crawler_page_encoding as encoding,
        dss.crawler_page_timeout as page_timeout,
        dss.url_match_patterns ,
        dss.url_encodes,
        dss.script_id,

        ct.id as task_id,
        ct.down_system_site_id,
        ct.site_id,
        ct.cookie_id,
        ct.proxy_id,
        ct.crawler_id,
        (date_add(ct.task_timeout_time,interval -2 minute)) as task_timeout,

        s.ip_minute_speed_limit
        from crawl_task ct
        join down_system_site dss on ct.down_system_site_id =dss.id
        join down_system ds on dss.down_system_id =ds.id
        join site s on s.id = dss.site_id
        where
        ct.bind_last_status =1
        and ct.dispatch_status =1
  </select>
    <update id="dispatchSuccess">
      update crawl_task
      set
      dispatch_status = 1,
      dispatch_msg = 'success',
      dispatch_time = current_timestamp,
      task_start_time = current_timestamp
      where id = #{id}
    </update>
    <update id="dispatchFailed">
         update crawl_task
      set
      dispatch_status = #{dispatchStatus},
      dispatch_msg = #{dispatchMsg},
      dispatch_time = current_timestamp
      where id = #{id}
    </update>
    <update id="terminateTimeoutTask">
        update crawl_task
        set task_status = 1,
        task_finish_time =current_timestamp
        where id = 1
    </update>

    <select id="getTimeoutTasksToTerminate" resultType="com.jasmine.crawler.common.pojo.entity.CrawlTask">
        select
        ct.id
        from crawl_task ct
        where
        ct.task_status=1
        and ct.task_timeout_time &lt; current_timestamp
    </select>
    <select id="getForUpdate" resultType="com.jasmine.crawler.common.pojo.entity.CrawlTask">
        select * from crawl_task where id = #{id} for update
    </select>
</mapper>
